name: Build & Deploy

on:
  repository_dispatch:
    types:
      - "run ci"
jobs:
  # ------------------------
  affected_apps:
    name: Gather Affected
    runs-on: ubuntu-latest
    outputs:
      cz: ${{ steps.generate-matrix.outputs.cz }}
      hu: ${{ steps.generate-matrix.outputs.hu }}
      sk: ${{ steps.generate-matrix.outputs.sk }}
      default: ${{ steps.generate-matrix.outputs.default }}
      cz_array: ${{ steps.generate-matrix.outputs.cz_array }}
      hu_array: ${{ steps.generate-matrix.outputs.hu_array }}
      sk_array: ${{ steps.generate-matrix.outputs.sk_array }}
      default_array: ${{ steps.generate-matrix.outputs.default_array }}
    steps:
      - name: Derive affected app names
        id: derive-affected
        shell: bash
        run: |
          echo "AFFECTED=$(npx nx show projects --affected --exclude \*-e2e)" >> $GITHUB_ENV
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Generate Matrix
        id: generate-matrix
        shell: bash
        run: |
          echo "from env: $AFFECTED"
          chmod +x ./scripts/byRegion.sh
          ./scripts/byRegion.sh
  # ------------------------
  my_echo:
    name: Debug Echo
    runs-on: ubuntu-latest
    needs:
      - affected_apps
    steps:
      - name: Echo previous outputs
        run: |
          echo "${{ toJSON(needs.affected_apps.outputs) }}"
          echo "${{ needs.affected_apps.outputs.default }}"
          echo "${{ needs.affected_apps.outputs.cz }}"
          echo "${{ needs.affected_apps.outputs.hu }}"
          echo "${{ needs.affected_apps.outputs.sk }}"
      - name: JSON tests
        run: |
          echo "${{ fromJSON(needs.affected_apps.outputs.default_array) }}"
          echo "${{ fromJSON(needs.affected_apps.outputs.cz_array) }}"
          echo "${{ fromJSON(needs.affected_apps.outputs.hu_array) }}"
          echo "${{ fromJSON(needs.affected_apps.outputs.sk_array) }}"
  # ------------------------
  build_ppe_matrix:
    name: Build PPE
    environment: ppe-build
    runs-on: ubuntu-latest
    needs:
      - my_echo
      - affected_apps
    strategy:
      matrix:
        region: ["default", "cz", "hu", "sk"]
    steps:
      - name: build:ppe:${{ matrix.region }}
        if: ${{ needs.affected_apps.outputs[matrix.region] != '' }}
        run: |
          echo "nx run-many -t container --configuration=ppe:${{ matrix.region }} -p ${{ needs.affected_apps.outputs[matrix.region] }}"
  # ------------------------
  build_prod_matrix:
    name: Build Prod
    environment: prod-build
    runs-on: ubuntu-latest
    needs:
      - build_ppe_matrix
      - affected_apps
    strategy:
      matrix:
        region: ["default", "cz", "hu", "sk"]
    steps:
      - name: build:ppe:${{ matrix.region }}
        if: ${{ needs.affected_apps.outputs[matrix.region] != '' }}
        run: |
          echo "nx run-many -t container --configuration=ppe:${{ matrix.region }} -p ${{ needs.affected_apps.outputs[matrix.region] }}"
  # ------------------------
  deploy_ppe_matrix:
    name: Deploy PPE
    environment: ppe
    runs-on: ubuntu-latest
    needs:
      - build_ppe_matrix
      - affected_apps
    strategy:
      matrix:
        region: ["default", "cz", "hu", "sk"]
    steps:
      - name: deploy:ppe:${{ matrix.region }}
        if: ${{ needs.affected_apps.outputs[matrix.region] != '' }}
        run: |
          echo "deploy ppe:${{ matrix.region }} -p ${{ needs.affected_apps.outputs[matrix.region] }}"
  # ------------------------
  deploy_prod_matrix:
    name: Deploy Prod
    environment: prod
    runs-on: ubuntu-latest
    needs:
      - build_prod_matrix
      - deploy_ppe_matrix
      - affected_apps
    strategy:
      matrix:
        region: ["default", "cz", "hu", "sk"]
    steps:
      - name: deploy:prod:${{ matrix.region }}
        if: ${{ needs.affected_apps.outputs[matrix.region] != '' }}
        run: |
          echo "deploy prod:${{ matrix.region }} -p ${{ needs.affected_apps.outputs[matrix.region] }}"
